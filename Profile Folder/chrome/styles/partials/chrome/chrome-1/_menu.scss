// Custom menubar for non-native titlebars
:root[gktitnative="false"] {
	#main-menubar > menu {
		&[_moz-menuactive] {
			background-color: transparent !important;
			color: inherit !important;
		}
		&[open] {
			background-color: AccentColor !important;
			color: AccentColorText !important;
		}
	}
}


// Hide menu items that weren't yet introduced
#menu_find6,
#menu_savePage6,
#menu_print6,
#tools6-menu,
#menu_settings6,
#bookmarks-menu {
	display: none;
}

// Hide "Update Geckium" placeholder menu item unless Geckium's outdated
:root:not([gkcanupdate]) {
	#menu_newVersion {
		display: none;
	}
}

menupopup {
	// Hide menu items' buttons as they weren't yet introduced
	> .menuitemitems,
	> .menuitemitems + menuseparator {
		display: none !important;
	}


	// Standard menus (right-click, menubar, etc.)
	button {
		min-width: 0 !important;
	}


	> menu,
	> menuitem {
		&[disabled] {
			pointer-events: none;
		}

		.menu-text {
			margin-inline-end: 48px !important;
		}
	}
	
	#context-sep-navigation {
		margin-left: 0 !important;
	}


	// Force top menu items to show as regular menu items, and hide their icons
	&#contentAreaContextMenu {
		#context-navigation {
			background-color: transparent !important;
			flex-direction: column !important;

			.menu-iconic-left {
				display: none !important;
			}

			> menuitem {
				justify-content: unset !important;
				
				&::after {
					content: attr(aria-label);
					appearance: menuitemtext !important;
					white-space: nowrap;

					@media (-moz-windows-classic) {
						padding-inline-start: 1.45em !important;
					}
				}
				
				@media (-moz-windows-classic) {
					min-height: 19px !important;
					height: 19px !important;
					min-height: 19px !important;
				}
			}
		}
	}
}

// Foolproof? plan:
// - Make the hardcoded menu '--gk' variables like how tabs are handled in tabs.scss
// - Construct the hardcoded menu in chrome-1's menu.scss
// - Have the construct leverage the variables, and have future eras only change variables


// Fallback/hardcoded menu styling
//  Styling to be used
:root {
	--gk-menu-radii: 0px;
	--gk-menu-background: linear-gradient(to bottom, #FFFFFF, #EEEEEE);
	--gk-menu-border-color: rgba(0, 0, 0, 0.24);
	--gk-menu-foreground: black;
	--gk-menu-padding: 1px;
	--gk-menu-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
	--gk-menu-shadow-margin: 4px !important;
	
	--gk-menuitem-radii: 0;
	--gk-menuitem-padding: unset;
	--gk-menuitem-background: #DCE5FA;
	--gk-menuitem-border-color: unset;
	--gk-menuitem-foreground: black;
	--gk-menuitem-minheight: 20px;

	--gk-menusep-color: rgba(0, 0, 0, 0.25); //TODO
}

//  Code for applying styling
// :root[gkmenunative="2"],
// :root[gkmenunative="1"]:not([gksystheme="gtk"]),
// :root[gkmenunative="1"][gkthemed="true"] {
	menupopup,
	toolbarbutton menupopup[placespopup] {
		appearance: none !important;

		--panel-background: var(--gk-menu-background) !important;
		--panel-color: var(--gk-menu-foreground) !important;
		--panel-border-color: var(--gk-menu-border-color) !important;
		--panel-border-radius: var(--gk-menu-radii) !important;
		--panel-padding: var(--gk-menu-padding) !important;
		--panel-shadow: var(--gk-menu-shadow) !important;
		--panel-shadow-margin: var(--gk-menu-shadow-margin) !important;
		--menu-icon-opacity: 1 !important;

		> :is(menu, menuitem) {
			appearance: none !important;
			min-height: var(--gk-menuitem-minheight) !important;
			height: unset !important;
			// padding-block: unset !important;

			// padding-inline-start: unset !important; // TODO

			&[_moz-menuactive="true"] {
				background: var(--gk-menuitem-background) !important;
				color: var(--gk-menuitem-foreground) !important;
			}



			// .menu-iconic-left {
			// 	padding-top: unset !important; // 2px
			// 	padding-inline-end: unset !important;
			// 	margin-inline-end: unset !important;
			// }

			// .menu-accel {
			// 	margin-inline: unset !important;
			// }

			.menu-right {
				margin-inline-end: 3px !important;
				appearance: none !important;
				list-style-image: url("chrome://userchrome/content/assets/img/chrome-11/menu/right.svg") !important;
			}

			&[type="checkbox"] .menu-iconic-left,
			&[type="radio"] .menu-iconic-left {
				.menu-iconic-icon {
					appearance: none !important;
				}
			}
			&[type="checkbox"][checked="true"] .menu-iconic-left {
				list-style-image: url("chrome://userchrome/content/assets/img/chrome-11/menu/check.svg") !important;
			}
			&[type="radio"] .menu-iconic-left {
				list-style-image: url("chrome://userchrome/content/assets/img/chrome-11/menu/radio.svg") !important;
			}
			&[type="radio"][checked="true"] .menu-iconic-left {
				list-style-image: url("chrome://userchrome/content/assets/img/chrome-11/menu/radio-sel.svg") !important;
			}
		}

		menuseparator {
			appearance: none !important;
			padding-inline: unset !important;
			padding-block: unset !important;
			
			--panel-separator-color: var(--gk-menusep-color) !important;
		}
	}
	toolbarbutton menupopup[placespopup] {
		--panel-width: initial !important;
		--nested-margin: -3px !important;

		--arrowpanel-menuitem-margin: 0 !important;
		--arrowpanel-menuitem-padding: var(--gk-menuitem-padding) !important;
		--arrowpanel-menuitem-border-radius: var(--gk-menuitem-radii) !important;
	}
// }




// TODO: Take the risk.
//  Do the hardcoded menu styles as base CSS for the menus that always gets used, THEN do the native ones as an overlay, given the trend in Firefox towards non-native menus


//It would be easier to therefore handle it as such:
// Hardcoded: Chromium OS menu styling
// Non-hardcoded:
//     All platforms*: Per OS styling
//     Mac OS X titlebutton style: Hardcoded Mac OS X styling?

// macOS:
//  menupopup exists as an appearance
//  BUT menuitem does not exist as an appearance in Firefox 128 (it does in 115, but is somewhat visually broken hover-wise)
//  Though given it's macOS, remaking the way it looks would be easier anyway (could even pave the way for Mac OS X menus at a later date)

// Windows:
// Could maybe do a @media not (-moz-windows-non-native-menus) {?
//  it failing means unpatched 128+
//  but then, how to handle unpatched or non-native?


// // Native menu styling
// :root[gkmenunative="0"],
// :root[gkmenunative="1"][gksystheme="gtk"]:not([gkthemed="true"]) {
// 	//  Linux
// 	@media (-moz-platform: linux) {
// 		menupopup,
// 		toolbarbutton menupopup[placespopup] {
// 			--panel-background: Field !important;
// 			--panel-color: FieldText !important;
// 			--panel-border-color: ThreeDShadow !important;
// 			--panel-border-radius: 0 !important;
// 			--panel-padding: 0 !important;
// 		}
// 		toolbarbutton menupopup[placespopup] {
// 			--panel-width: initial !important;
// 			--nested-margin: -3px !important;
// 			--panel-shadow-margin: 0px !important;
		
// 			--arrowpanel-menuitem-margin: 0 !important;
// 			--arrowpanel-menuitem-padding: 4px 6px !important;
// 			--arrowpanel-menuitem-border-radius: 0 !important;

// 			> :is(menu, menuitem)[_moz-menuactive="true"] {
// 				background-color: -moz-menuhover !important;
// 				color: -moz-menuhovertext !important;
// 			}
// 		}
// 	}

// 	//  macOS
// 	//  TODO: In the future, if using Mac OS X titlebar style then apply Mac OS X menu styling here
// 	@media (-moz-platform: macos) {
// 		toolbarbutton menupopup[placespopup] {
// 			appearance: menupopup !important;
// 			--panel-background: transparent !important;
// 			--panel-color: MenuText !important;
// 			--panel-padding: 4px !important;
// 			--panel-border-color: transparent !important;
// 			--panel-width: initial !important;
// 			--nested-margin: -3px !important;
// 			--panel-shadow-margin: 0px !important;
		
// 			--arrowpanel-menuitem-margin: 0 !important;
// 			--arrowpanel-menuitem-padding: 2.5px 9px !important;
// 			--arrowpanel-menuitem-border-radius: 3px !important;

// 			> :is(menu, menuitem)[_moz-menuactive="true"] {
// 				background-color: AccentColor !important;
// 				color: AccentColorText !important;
// 			}

// 			> :is(menu, menuitem) {
// 				min-height: unset !important;
// 			}
// 		}
// 	}

// 	//  Windows
// 	@media (-moz-platform: windows) {
// 		//  Windows (non-native Firefox)
// 		menupopup,
// 		toolbarbutton menupopup[placespopup] {
// 			--panel-background: Field !important;
// 			--panel-color: FieldText !important;
// 			--panel-border-color: transparent !important;
// 			--panel-border-radius: 4px !important;
// 			--panel-padding: 3px !important;
// 		}
// 		toolbarbutton menupopup[placespopup] {
// 			--panel-width: initial !important;
// 			--nested-margin: -3px !important;
// 			--panel-shadow-margin: 5px !important;
		
// 			--arrowpanel-menuitem-margin: 0 !important;
// 			--arrowpanel-menuitem-padding: 4px 6px !important;
// 			--arrowpanel-menuitem-border-radius: 3px !important;

// 			> :is(menu, menuitem)[_moz-menuactive="true"] {
// 				background-color: AccentColor !important;
// 				color: AccentColorText !important;
// 			}
// 		}

// 		//  Leverage a bug with Firefox's CSS logic to only apply native menus if the @media that 115- had exists, thus is 115 or patched Firefox
// 		@media not (-moz-windows-non-native-menus) {
// 			menupopup,
// 			toolbarbutton menupopup[placespopup] {
// 				--panel-padding: 0 !important;
// 			}
// 			toolbarbutton menupopup[placespopup] {
// 				appearance: menupopup !important;
// 				--panel-background: transparent !important;
// 				--panel-color: MenuText !important;
// 				--panel-border-radius: 0 !important;
// 				--panel-border-color: transparent !important;
// 				--panel-width: initial !important;
// 				--nested-margin: -3px !important;
// 				--panel-shadow-margin: 0px !important;
			
// 				--arrowpanel-menuitem-margin: 0 !important;
// 				--arrowpanel-menuitem-padding: initial !important;
				
// 				> :is(menu, menuitem) {
// 					appearance: menuitem !important;
// 					min-height: unset !important;
// 					&[_moz-menuactive="true"] {
// 						color: -moz-menuhovertext !important;
// 					}
// 					&[disabled] {
// 						color: GreyText !important;
// 					}
			
// 					.menu-iconic-left {
// 						margin-inline-start: 3px !important;
// 					}
			
// 					.menu-iconic-text {
// 						padding-top: 1px !important;
// 						padding-bottom: 1px !important;
// 						margin-left: 2px !important;
// 					}
			
// 					.menu-text {
// 						padding-inline-start: 28px !important;
// 					}
			
// 					.menu-text, .menu-iconic-text {
// 						margin-inline-start: 2px !important;
// 						padding-inline-end: 2px !important;
// 					}
			
// 					.menu-accel {
// 						margin-inline-end: 1.35em !important;
// 					} //16.2
// 				}
			
// 				> menuseparator { // menu.css:360, Firefox 118
// 					position: initial !important;
// 					appearance: auto !important;
// 					border: unset !important;
// 					min-height: unset !important;
// 					margin: unset !important;
// 					padding-inline: unset !important;
// 					padding-top: unset !important;
// 					padding-bottom: unset !important;
			
// 					border-top: 1px solid ThreeDShadow !important;
// 					border-bottom: 1px solid ThreeDHighlight !important;
// 				}
// 			}
// 		}
// 	}
// }